@using HwProj.Models.ViewModels
@using HwProj.Tools
@using Microsoft.AspNet.Identity
@model HwProj.Models.Homework
@{
    ViewBag.Title = User.Identity.GetUserId() == Model.Task.Course.Mentor.Id ? "Отправка рецензии" :
                                                                               "Просмотр решения";
}

<br />
<div class="row">
    <div class="offset-xl-1 col-xl-10 offset-lg-1 col-lg-10 col-md-12 col-sm-12 col-12">
        <div class="jumbotron jumbotron_border_gray">
            <h3 class="text-center">@ViewBag.Title</h3>
            <hr />
        <div class="form-group row">
            <div class="col-xl-2 col-lg-2 col-md-4 col-sm-12 col-12">
                @Html.Raw(@Model.Student.Name + " " + @Model.Student.Surname + string.Format(" {0}", new MailTo(Model.Student.Email)))
            </div>
        </div>
        <div class="form-group row">
            <div class="col-xl-2 col-lg-2 col-md-4 col-sm-12 col-12">
                <b>@Html.DisplayNameFor(m => m.Task.Title)</b>
            </div>
            <div class="col-xl-10 col-lg-10 col-md-8 col-sm-12 col-12">
                @Html.ValueFor(m => m.Task.Title)
            </div>
        </div>
        <div class="form-group row">
            <div class="col-xl-2 col-lg-2 col-md-4 col-sm-12 col-12">
                <b>@Html.DisplayNameFor(m => m.Task.Description)</b>
            </div>
            <div class="col-xl-10 col-lg-10 col-md-8 col-sm-12 col-12">
                @Html.Raw(Model.Task.Description.AsMarkdown())
            </div>
        </div>
        <div class="form-group row">
            <div class="col-xl-2 col-lg-2 col-md-4 col-sm-12 col-12">
                <b>@Html.DisplayNameFor(m => m.IsCompleted)</b>
            </div>
            <div class="col-xl-10 col-lg-10 col-md-8 col-sm-12 col-12">
                @Html.Raw(@Model.IsCompleted ? "✅" : "❌")
            </div>
        </div>
        <div class="form-group row">
            <div class="col-xl-2 col-lg-2 col-md-4 col-sm-12 col-12">
                <b>@Html.DisplayNameFor(m => m.ReviewComment)</b>
            </div>
            <div class="col-xl-10 col-lg-10 col-md-8 col-sm-12 col-12">
                @Html.ValueFor(m => m.ReviewComment)
            </div>
        </div>
        <div class="btn-group">
            <span class="glyphicon glyphicon-cloud-download"></span> v.@Model.Attempt          
            <a class="btn btn-default" href=@Model.GitHub>
                <span class="glyphicon glyphicon-link"></span>GitHub
            </a>          
        </div>
@if (User.Identity.GetUserId() == Model.Task.Course.Mentor.Id)
{
    @Html.Partial("Review", new HomeworkAcceptViewModel() {HomeworkId = @Model.Id})
}
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


